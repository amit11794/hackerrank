using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;



class Result
{

    /*
     * Complete the 'getScoreDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY numSeq as parameter.
     */

    public static int getScoreDifference(List<int> numSeq)
    {
        int first_score = 0
            , second_score = 0
            , i = 0;
                
        while (numSeq.Count() > 0)
        {
            int picked_score = numSeq[0];

            if (i++ % 2 == 0)
                first_score += picked_score;
            else
                second_score += picked_score;

            numSeq.RemoveAt(0);

            if (picked_score % 2 == 0)
                numSeq.Reverse();
        }
        
        return first_score - second_score;
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int numSeqCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> numSeq = new List<int>();

        for (int i = 0; i < numSeqCount; i++)
        {
            int numSeqItem = Convert.ToInt32(Console.ReadLine().Trim());
            numSeq.Add(numSeqItem);
        }

        int result = Result.getScoreDifference(numSeq);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
